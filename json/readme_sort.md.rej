diff a/json/readme_sort.md b/json/readme_sort.md	(rejected hunks)
@@ -0,0 +1,62 @@
+Разработчики бэкенда часто взаимодействуют с многочисленными API и дополнительно обрабатывают результаты. Сейчас вам придется сделать именно это!
+
+Во входном файле четыре строчки. В первой находится адрес сервера, во второй — номер порта. В следующих двух строках записаны два целых 32-разрядных числа: a и b. Необходимо осуществить GET-запрос к серверу по указанному номеру порта, передав значения чисел a и b в значениях одноименных CGI-параметров. Сервер ответит JSON-массивом из целых чисел. Необходимо отсортировать числа в порядке невозрастания и распечатать в выходной файл положительные — по одному числу в строке.
+
+Гарантируется, что общее количество чисел в ответе не превосходит 100, при этом каждое из них — 32-разрядное знаковое целое число.
+
+Это разминочная задача, к которой мы размещаем готовое решения, чтобы вы могли познакомиться с нашей автоматической системой проверки решений. Ввод и вывод осуществляется через файлы, либо через стандартные потоки ввода-вывода, как вам удобнее. 
+
+### Формат ввода
+Строка — URL сервера.
+Целое число — порт сервера.
+Целое число — число a.
+Целое число — число b. 
+
+### Формат вывода
+Целые положительные числа, отсортированные по невозрастанию, из списка в ответе сервера, по одному в строке. 
+
+### Пример
+
+#### Ввод
+```
+http://127.0.0.1
+7777
+2
+4
+```
+
+#### Вывод
+```
+1024
+256
+17
+8
+6
+4
+2
+```
+
+### Примечания
+Для решений на языке C++ доступны библиотеки [libcurl](https://curl.haxx.se/libcurl/) v7.47.0 и [nlohmann/json](https://github.com/nlohmann/json/releases/tag/v3.8.0) v3.8.0. Соответствующие include выглядят так:
+```cpp
+#include <curl/curl.h>  
+#include "json.hpp"
+```
+
+Пример ответа сервера для первого теста:
+```
+curl "http://127.0.0.1:7777?a=2&b=4"  
+[  
+  8,  
+  6,  
+  -2,  
+  2,  
+  4,  
+  17,  
+  256,  
+  1024,  
+  -17,  
+  -19  
+]
+```
+
