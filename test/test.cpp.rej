diff a/test/test.cpp b/test/test.cpp	(rejected hunks)
@@ -25,21 +25,40 @@
 vector<Group<String>> GroupHeavyStrings(vector<String> strings) {
   // Напишите реализацию функции,
   set<char> s;
-  map<set<char>, int> group;
+  map<set<char>, size_t> group;
+  // тут можно использовать int вместо vector<String>, но туда пихать номер
+  // группы слов, т.е. мне нужна еще 1 переменная-счетчки, которая будет учитывать
+  // номер группы стрингов
+  size_t count = 0;
+  vector<Group<String>> result; 
 
   for (const auto& word:strings){
     s.clear();
     for (const auto& letter:word){
       if (s.count(letter) == 0){
-        s.insert(letter);
-      }
+        s.insert(letter);        
+      } 
+    }        
+    // TODO сделать проверку
+    if (group.count(s) == 0){
+      group[s] = count++;
+    }    
+
+    if (result.size() >= count){
+      result[group[s]].push_back(word);
+    } else {      
+      result.push_back({word});
     }
-    ++group[s];
-  }
-  
-  cout << group.size();  
+  }  
 
-  vector<Group<String>> result;
+  // for (auto& [key, value]:group){
+  //   Group<String> vec;
+  //   for (auto& v:value){
+  //     vec.push_back(move(v));
+  //   }
+  //   result.push_back(vec);    
+  // }
+  
   return result;
   // использовав не более 1 копирования каждого символа
 }
